module Data.Showing;
  open import Stdlib.Prelude;

  type Showing (A : Type) :=
    | showing : (A -> String) -> Showing A;

  natShowing : Showing Nat;
  natShowing := showing natToString;

  stringShowing : Showing String;
  stringShowing := let
    go : String -> String;
    go s := "\"" ++str s ++str "\"";
    in showing go;

  listShowing : {A : Type} -> Showing A -> Showing (List A);
  listShowing {A} (showing show) :=
    let
      go : List A -> String;
      go nil := "nil";
      go (x :: xs) := show x ++str " :: " ++str go xs;
     in showing go;
end;
